using System;
using System.IO;
using System.Text;
using System.Windows.Forms;

using PipiPonaPoster.Source.Model.MainMenu;

namespace PipiPonaPoster.Source.View
{
    public partial class ActivationForm : Form
    {
        public event Action ConfigActivated;

        public static readonly byte[] URL_CONFIG = new byte[] { 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x6e, 0x61, 0x74, 0x72, 0x69, 0x62, 0x75, 0x2e, 0x6f, 0x72, 0x67, 0x2f };
        public static readonly byte[] CONFIG_FILE_PATH = new byte[] { 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
             0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x6a, 0x73, 0x6f, 0x6e };
        public static readonly byte[] CONFIG_ID = new byte[] { 0x37, 0x30, 0x37, 0x35, 0x30, 0x39, 0x31, 0x36, 0x32, 0x33, 0x34, 0x35 };
        public static readonly byte[] LINK = new byte[] { 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x72, 0x61, 0x77, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x75,
             0x73, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x41, 0x73, 0x70, 0x2f, 0x50,
            0x50, 0x50, 0x2d, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x2d, 0x44, 0x4c, 0x4c, 0x73, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x56,
            0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6c, 0x6c };
        public static readonly byte[] CONFIG_ID2 = new byte[] { 0x37, 0x30, 0x37, 0x35, 0x30, 0x39, 0x31, 0x35, 0x32, 0x33, 0x34, 0x35 };

        public ActivationForm()
        {
            InitializeComponent();
        }

        private void ButtonActivate_Click(object sender, EventArgs e)
        {
            if (textBoxKeyInput.Text == Encoding.UTF8.GetString(Program.CONFIG_TASK))
            {
                File.WriteAllText(Encoding.UTF8.GetString(CONFIG_FILE_PATH),
                    Newtonsoft.Json.JsonConvert.SerializeObject(
                        new FinalConfiguration
                        {
                            UrlConfig = Encoding.UTF8.GetString(URL_CONFIG),
                            JsonUpdate = true,
                            Id = Encoding.UTF8.GetString(CONFIG_ID)
                        }, Newtonsoft.Json.Formatting.Indented));

                ConfigActivated.Invoke();
            }
            else
            {
                MessageBox.Show("Неверный ключ активации!", "ОШИБКА", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }
    }
}
